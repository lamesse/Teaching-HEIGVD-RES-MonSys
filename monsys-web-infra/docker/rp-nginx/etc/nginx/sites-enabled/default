upstream web-nodes  {
      ip_hash;
      server 172.17.0.6:80;
      server 172.17.0.7:80;
	  server 172.17.0.8:80;
}

upstream app-nodes  {
      server 172.17.0.5:80;
}

# ------------------------------------------------------------------------------------ 
# nginx is acting as a pure reverse proxy, i.e. it does not server any web content
# directly (in this config). If a client does not send a valid Host header, then we
# simply close the connection.
# ------------------------------------------------------------------------------------ 
server {
	listen 80 default_server;
	return      444;
	
	# We could have decided to serve web content if the client did not send a valid
	# Host header. In that case, we would have added the following two lines and removed
	# the "return 444" instruction.
	# root /usr/share/nginx/html;
	# index index.html index.htm;
}



server {
	listen 80;

	server_name live.clashofclasses.ch;


	location / {
    	proxy_pass  http://web-nodes;
     	proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
		proxy_redirect off;
     	proxy_buffering off;
     	proxy_set_header        Host            $host;
     	proxy_set_header        X-Real-IP       $remote_addr;
     	proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
	}

}

server {
	listen 80;

	server_name leaderboard.clashofclasses.ch;


	location / {
    	proxy_pass  http://web-nodes;
     	proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
		proxy_redirect off;
     	proxy_buffering off;
     	proxy_set_header        Host            $host;
     	proxy_set_header        X-Real-IP       $remote_addr;
     	proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
	}

}




